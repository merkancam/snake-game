{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/views/Base.js","webpack:///./src/js/views/BoardView.js","webpack:///./src/js/controllers/SnakeController.js","webpack:///./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","elements","boardTable","document","getElementById","foodLocation","boardLocations","snakePositions","fillCell","cellPosition","filledCell","x","y","style","backgroundColor","clearCell","clearedCell","putNewFood","availablePoints","board","filter","isAvailable","lengthOfArray","length","rnd","Math","floor","random","foodCell","isFoodExists","location","tableRows","push","innerHTML","boardView","boardCols","boardRows","find","element","snakeController","forEach","e","column","direction","addEventListener","keyCode","setInterval","positionHeadOfSnake","positionNext","haveMatched","removedItem","shift"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const elements = {\r\n    boardTable: document.getElementById(\"boardTable\")\r\n\r\n};","import {\r\n    elements\r\n} from './Base';\r\n\r\n\r\nexport const rows = 30;\r\nexport const cols = 30;\r\nexport let foodLocation = {};\r\nexport let boardLocations = [];\r\n\r\nexport const createBoard = () => {\r\n    let tableRows = '';\r\n    for (let r = 0; r <= rows; r++) {\r\n        tableRows += '<tr>'\r\n        for (let c = 0; c <= cols; c++) {\r\n            tableRows += `<td id=\"${c}.${r}\"></td>`;\r\n            boardLocations.push({ x: c, y: r, isAvailable : true });\r\n        }\r\n        tableRows += '</tr>';\r\n    }\r\n    elements.boardTable.innerHTML = tableRows;\r\n}","import * as base from '../views/Base'\r\nimport * as board from '../views/BoardView';\r\n\r\nexport let snakePositions = [];\r\nexport const resetSnakePosition = (boardCols, boardRows) => {\r\n    snakePositions = [];\r\n    for (let i = 0; i < 4; i++) {\r\n        let c = (boardCols / 2) + i;\r\n        let r = (boardRows / 2);\r\n        snakePositions.push({\r\n            x: c,\r\n            y: r\r\n        });\r\n\r\n        var found = board.boardLocations.find(function (element) {\r\n            return element.x == c && element.y == r;\r\n        });\r\n\r\n        found.isAvailable = false;\r\n    }\r\n\r\n    putNewFood();\r\n}\r\n\r\n\r\nexport const moveSnakePosition = (direction) => {\r\n    let positionHeadOfSnake = snakePositions[snakePositions.length - 1];\r\n    let positionNext = { x: -1, y: -1 }\r\n    let haveMatched = true;\r\n\r\n    switch (direction) {\r\n        case 'Up':\r\n            positionNext = { x: positionHeadOfSnake.x, y: positionHeadOfSnake.y - 1 };\r\n\r\n            break;\r\n        case 'Down':\r\n            positionNext = { x: positionHeadOfSnake.x, y: positionHeadOfSnake.y + 1 };\r\n\r\n            break;\r\n        case 'Left':\r\n            positionNext = { x: positionHeadOfSnake.x - 1, y: positionHeadOfSnake.y };\r\n\r\n            break;\r\n        case 'Right':\r\n            positionNext = { x: positionHeadOfSnake.x + 1, y: positionHeadOfSnake.y };\r\n\r\n            break;\r\n        case 'Pause':\r\n            haveMatched = false;\r\n            break;\r\n        default:\r\n            haveMatched = false;\r\n            break;\r\n    }\r\n\r\n\r\n    if (haveMatched) {\r\n        snakePositions.push(positionNext);\r\n        fillCell(positionNext);\r\n\r\n        if (isFoodExists(positionNext)) {\r\n            putNewFood();\r\n        }\r\n        else {\r\n            let removedItem = snakePositions.shift();\r\n            clearCell(removedItem);\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const showSnake = () => {\r\n    snakePositions.forEach(function (e) {\r\n        let column = `${e.x}.${e.y}`;\r\n        document.getElementById(column).style.backgroundColor = \"black\";\r\n    });\r\n}\r\n\r\n\r\nconst fillCell = (cellPosition) => {\r\n    let filledCell = `${cellPosition.x}.${cellPosition.y}`;\r\n    document.getElementById(filledCell).style.backgroundColor = \"black\";\r\n}\r\n\r\n\r\nconst clearCell = (cellPosition) => {\r\n    let clearedCell = `${cellPosition.x}.${cellPosition.y}`;\r\n    document.getElementById(clearedCell).style.backgroundColor = \"white\";\r\n}\r\n\r\nconst putNewFood = () => {\r\n    let availablePoints = board.boardLocations.filter(x => x.isAvailable == true);\r\n    let lengthOfArray = availablePoints.length;\r\n    const rnd = Math.floor(Math.random() * lengthOfArray);\r\n    board.foodLocation.x = availablePoints[rnd].x;\r\n    board.foodLocation.y = availablePoints[rnd].y;\r\n    let foodCell = `${board.foodLocation.x}.${board.foodLocation.y}`;\r\n    document.getElementById(foodCell).style.backgroundColor = \"green\";\r\n\r\n};\r\n\r\n\r\n\r\n\r\nconst isFoodExists = (location) => {\r\n    if (board.foodLocation.x == location.x && board.foodLocation.y == location.y) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n","import * as boardView from './views/BoardView';\r\nimport * as snakeView from './views/SnakeView';\r\nimport * as snakeController from './controllers/SnakeController';\r\n\r\n\r\nboardView.createBoard();\r\nsnakeController.resetSnakePosition(boardView.cols, boardView.rows);\r\nsnakeController.showSnake();\r\n\r\n\r\nlet direction = \"\";\r\ndocument.addEventListener(\"keydown\", function (key) {\r\n    switch (key.keyCode) {\r\n        case 38:\r\n            if (direction != \"Down\")\r\n                direction = \"Up\";\r\n            break;\r\n        case 40:\r\n            if (direction != \"Up\")\r\n                direction = \"Down\";\r\n            break;\r\n        case 37:\r\n            if (direction != \"Right\")\r\n                direction = \"Left\";\r\n            break;\r\n        case 39:\r\n            if (direction != \"Left\")\r\n                direction = \"Right\";\r\n            break;\r\n        case 32:\r\n            direction = \"Pause;\"\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n});\r\n\r\n\r\nsetInterval(() => {\r\n    snakeController.moveSnakePosition(direction);\r\n}, 85);\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}