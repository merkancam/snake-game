{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/views/Base.js","webpack:///./src/js/controllers/BoardController.js","webpack:///./src/js/controllers/SnakeController.js","webpack:///./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","elements","boardTable","document","getElementById","rows","cols","score","foodLocation","boardLocations","displayScore","innerText","createBoard","tableRows","push","x","y","isAvailable","innerHTML","putNewFood","availablePoints","filter","lengthOfArray","length","rnd","Math","floor","random","foodCell","style","backgroundColor","displayFoodPoint","timer","timerInterVal","pausePointTimer","pausePlayPointTimer","status","startTimer","setInterval","findLocation","location","find","element","positionHeadOfSnake","snakePositions","positionNext","resetSnakePosition","boardCols","boardRows","board","moveSnake","cellPosition","filledCell","clearInterval","removedItem","shift","clearedCell","showSnake","forEach","e","column","keepSnakeInsideBoard","boardController","snakeController","directions","previousDirection","addEventListener","keyCode","counter","isPaused","isIntervalStarted","intervalId","direction","haveMatched","snakeHeadPosition","checkIsGameOver","alert","visibility"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const elements = {\r\n    boardTable: document.getElementById(\"boardTable\")\r\n\r\n};","import {\r\n    elements\r\n} from '../views/Base';\r\n\r\n\r\nexport const rows = 16;\r\nexport const cols = 32;\r\nexport let score = 0;\r\nexport let foodLocation = {};\r\nexport let boardLocations = [];\r\nexport const increaseScore = () => {\r\n    score = score + timer;\r\n\r\n    displayScore();\r\n    timer = 10;\r\n    clearInterval(timerInterVal);\r\n    startTimer();\r\n}\r\n\r\nconst displayScore = () => {\r\n    document.getElementById(\"score\").innerText = \"Score : \" + score;\r\n}\r\n\r\ndisplayScore();\r\n\r\nexport const createBoard = () => {\r\n    let tableRows = '';\r\n    for (let r = 0; r <= rows; r++) {\r\n        tableRows += '<tr>'\r\n        for (let c = 0; c <= cols; c++) {\r\n            tableRows += `<td id=\"${c}.${r}\"></td>`;\r\n            boardLocations.push({ x: c, y: r, isAvailable: true });\r\n        }\r\n        tableRows += '</tr>';\r\n    }\r\n    elements.boardTable.innerHTML = tableRows;\r\n}\r\n\r\n\r\n\r\nexport const fillCell = (cellPosition) => {\r\n    let filledCell = `${cellPosition.x}.${cellPosition.y}`;\r\n    document.getElementById(filledCell).style.backgroundColor = \"white\";\r\n}\r\n\r\n\r\nexport const clearCell = (cellPosition) => {\r\n    let clearedCell = `${cellPosition.x}.${cellPosition.y}`;\r\n    document.getElementById(clearedCell).style.backgroundColor = \"black\";\r\n}\r\n\r\n\r\nexport const putNewFood = () => {\r\n    let availablePoints = boardLocations.filter(x => x.isAvailable == true);\r\n    let lengthOfArray = availablePoints.length;\r\n    const rnd = Math.floor(Math.random() * lengthOfArray);\r\n    foodLocation.x = availablePoints[rnd].x;\r\n    foodLocation.y = availablePoints[rnd].y;\r\n    let foodCell = `${foodLocation.x}.${foodLocation.y}`;\r\n    document.getElementById(foodCell).style.backgroundColor = \"red\";\r\n\r\n}\r\n\r\nconst displayFoodPoint = () => {\r\n    document.getElementById(\"timer\").innerText = timer;\r\n}\r\n\r\nlet timer = 10;\r\nlet timerInterVal;\r\nlet pausePointTimer;\r\nexport const pausePlayPointTimer = (status) => {\r\n    pausePointTimer = status;\r\n}\r\n\r\nexport const startTimer = () => {\r\n    timerInterVal = setInterval(() => {\r\n        displayFoodPoint();\r\n        if (timer == 1 || pausePointTimer)\r\n            return;\r\n        timer--;\r\n    }, 200);\r\n}\r\ndisplayFoodPoint();\r\n\r\n\r\nexport const findLocation = (location) => {\r\n    var found = boardLocations.find(function (element) {\r\n        return element.x == location.x && element.y == location.y;\r\n    });\r\n\r\n    return found;\r\n}\r\n\r\n\r\n\r\nexport const isFoodExists = (location) => {\r\n    if (foodLocation.x == location.x && foodLocation.y == location.y) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n","import * as base from '../views/Base'\r\nimport * as board from '../controllers/BoardController';\r\n\r\nexport let snakePositions = [];\r\nlet positionHeadOfSnake;\r\nexport let positionNext = { x: -1, y: -1 };\r\n\r\n\r\nexport const resetSnakePosition = (boardCols, boardRows) => {\r\n    snakePositions = [];\r\n    for (let i = 0; i < 3; i++) {\r\n        let c = (boardCols / 2) + i;\r\n        let r = (boardRows / 2);\r\n        snakePositions.push({\r\n            x: c,\r\n            y: r\r\n        });\r\n\r\n        var found = board.boardLocations.find(function (element) {\r\n            return element.x == c && element.y == r;\r\n        });\r\n\r\n        found.isAvailable = false;\r\n    }\r\n    positionHeadOfSnake = snakePositions[snakePositions.length - 1];\r\n    board.putNewFood();\r\n}\r\n\r\n\r\n\r\nexport const setNewPosition = (direction) => {\r\n    positionHeadOfSnake = snakePositions[snakePositions.length - 1];\r\n    positionNext = { x: -1, y: -1 }\r\n    let haveMatched = true;\r\n\r\n    switch (direction) {\r\n        case 'Up':\r\n            positionNext = { x: positionHeadOfSnake.x, y: positionHeadOfSnake.y - 1 };\r\n\r\n            break;\r\n        case 'Down':\r\n            positionNext = { x: positionHeadOfSnake.x, y: positionHeadOfSnake.y + 1 };\r\n\r\n            break;\r\n        case 'Left':\r\n            positionNext = { x: positionHeadOfSnake.x - 1, y: positionHeadOfSnake.y };\r\n\r\n            break;\r\n        case 'Right':\r\n            positionNext = { x: positionHeadOfSnake.x + 1, y: positionHeadOfSnake.y };\r\n\r\n            break;\r\n        case 'Pause':\r\n            haveMatched = false;\r\n            break;\r\n        default:\r\n            haveMatched = false;\r\n            break;\r\n    }\r\n\r\n    keepSnakeInsideBoard(positionNext);\r\n    return haveMatched;\r\n}\r\n\r\nexport const moveSnake = () => {\r\n\r\n    snakePositions.push(positionNext);\r\n    var found = board.findLocation(positionNext);\r\n    found.isAvailable = false;\r\n    board.fillCell(positionNext);\r\n    if (board.isFoodExists(positionNext)) {\r\n        board.increaseScore();\r\n        board.putNewFood();\r\n    }\r\n    else {\r\n        let removedItem = snakePositions.shift();\r\n        var found = board.findLocation(removedItem);\r\n        found.isAvailable = true;\r\n        board.clearCell(removedItem);\r\n    }\r\n\r\n};\r\n\r\nexport const showSnake = () => {\r\n    snakePositions.forEach(function (e) {\r\n        let column = `${e.x}.${e.y}`;\r\n        document.getElementById(column).style.backgroundColor = \"white\";\r\n    });\r\n}\r\n\r\n\r\n\r\nconst keepSnakeInsideBoard = (positionNext) => {\r\n    if (positionNext.y > board.rows) {\r\n        positionNext.y = 0;\r\n    }\r\n\r\n    if (positionNext.y < 0) {\r\n        positionNext.y = board.rows;\r\n    }\r\n\r\n    if (positionNext.x > board.cols) {\r\n        positionNext.x = 0;\r\n    }\r\n\r\n    if (positionNext.x < 0) {\r\n        positionNext.x = board.cols;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport * as boardController from './controllers/BoardController';\r\nimport * as snakeController from './controllers/SnakeController';\r\n\r\n\r\n\r\nfunction startNewGame() {\r\n    boardController.createBoard();\r\n    snakeController.resetSnakePosition(boardController.cols, boardController.rows);\r\n    snakeController.showSnake();\r\n}\r\n\r\n\r\nstartNewGame();\r\n\r\n\r\n\r\n\r\nlet directions = [];\r\nlet previousDirection = \"Right\";\r\n\r\n\r\ndocument.addEventListener(\"keydown\", function (key) {\r\n    var length = directions.length - 1;\r\n\r\n    switch (key.keyCode) {\r\n        case 38:\r\n            if (previousDirection != \"Down\") {\r\n                directions.push(\"Up\");\r\n                previousDirection = \"Up\";\r\n            }\r\n            break;\r\n        case 40:\r\n            if (previousDirection != \"Up\") {\r\n                directions.push(\"Down\");\r\n                previousDirection = \"Down\";\r\n            }\r\n            break;\r\n        case 37:\r\n            if (previousDirection != \"Right\") {\r\n                directions.push(\"Left\");\r\n                previousDirection = \"Left\";\r\n            }\r\n            break;\r\n        case 39:\r\n            if (previousDirection != \"Left\") {\r\n                directions.push(\"Right\");\r\n                previousDirection = \"Right\";\r\n            }\r\n            break;\r\n        case 32:\r\n            directions = [];\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n\r\n});\r\n\r\nlet counter = 0;\r\n\r\nconst checkIsGameOver = (snakeHeadPosition) => {\r\n\r\n    var found = snakeController.snakePositions.find(function (element) {\r\n        return element.x == snakeHeadPosition.x && element.y == snakeHeadPosition.y;\r\n    });\r\n\r\n    if (found) {\r\n        return true;\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n\r\nvar isPaused = false;\r\nlet isIntervalStarted = false;\r\nlet intervalId = setInterval(() => {\r\n    if (directions.length == 0) {\r\n        boardController.pausePlayPointTimer(true);\r\n        return;\r\n    }\r\n    boardController.pausePlayPointTimer(false);\r\n    if (!isIntervalStarted) {\r\n        boardController.startTimer();\r\n        isIntervalStarted = true;\r\n    }\r\n    var matched = snakeController.setNewPosition(directions[0]);\r\n    if (matched) {\r\n        if (checkIsGameOver(snakeController.positionNext)) {\r\n            isPaused = true;\r\n            if (counter > 0) {\r\n                clearInterval(intervalId);\r\n                alert(\"Your Score is \" + boardController.score);\r\n                document.getElementById(\"startMessage\").style.visibility = 'visible';\r\n            }\r\n            counter++;\r\n        }\r\n        else {\r\n            counter = 0;\r\n            isPaused = false;\r\n        }\r\n\r\n        if (!isPaused) {\r\n            snakeController.moveSnake();\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if (directions.length > 1) {\r\n        directions.shift();\r\n    }\r\n\r\n}, 80);\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}